{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\narut\\\\Documents\\\\Full Web Code Path\\\\Final Project\\\\client\\\\src\\\\pages\\\\ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = _ref => {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      let {\n        data: posts,\n        error\n      } = await supabase.from('Posts').select().order('created_at', {\n        ascending: true\n      });\n      if (error) console.log('Error: ', error);else setPosts(posts);\n    };\n\n    fetchPosts();\n  }, [id]);\n  const filteredPosts = posts.filter(post => post.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadPosts\",\n    children: filteredPosts.length > 0 ? filteredPosts.map((post, index) => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/PostPage/${post.id}`,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        id: post.id,\n        title: post.title,\n        description: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No Posts has been created yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","Card","supabase","Link","ReadPosts","id","posts","setPosts","fetchPosts","data","error","from","select","order","ascending","console","log","filteredPosts","filter","post","title","toLowerCase","includes","searchTerm","length","map","index","description"],"sources":["C:/Users/narut/Documents/Full Web Code Path/Final Project/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '../components/Card';\nimport { supabase } from '../client'\nimport { Link } from \"react-router-dom\";\nconst ReadPosts = ({ id }) => {\n\n    const [posts, setPosts] = useState([]);\n    \n\n    useEffect(() => {\n        const fetchPosts = async () => {\n          let { data: posts, error } = await supabase\n            .from('Posts')\n            .select()\n            .order('created_at', { ascending: true });\n    \n          if (error) console.log('Error: ', error);\n          else setPosts(posts);\n        };\n    \n        fetchPosts();\n      }, [id]);\n    \n      const filteredPosts = posts.filter(post =>\n        post.title.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    \n      return (\n        <div className=\"ReadPosts\">\n          {filteredPosts.length > 0 ? (\n            filteredPosts.map((post, index) => (\n              <Link to={`/PostPage/${post.id}`} key={post.id}>\n                <Card id={post.id} title={post.title} description={post.description} />\n              </Link>\n            ))\n          ) : (\n            <h2>No Posts has been created yet</h2>\n          )}\n        </div>\n      );\n    }\n\n\nexport default ReadPosts;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AACA,MAAMC,SAAS,GAAG,QAAY;EAAA;;EAAA,IAAX;IAAEC;EAAF,CAAW;EAE1B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;EAGAC,SAAS,CAAC,MAAM;IACZ,MAAMQ,UAAU,GAAG,YAAY;MAC7B,IAAI;QAAEC,IAAI,EAAEH,KAAR;QAAeI;MAAf,IAAyB,MAAMR,QAAQ,CACxCS,IADgC,CAC3B,OAD2B,EAEhCC,MAFgC,GAGhCC,KAHgC,CAG1B,YAH0B,EAGZ;QAAEC,SAAS,EAAE;MAAb,CAHY,CAAnC;MAKA,IAAIJ,KAAJ,EAAWK,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,KAAvB,EAAX,KACKH,QAAQ,CAACD,KAAD,CAAR;IACN,CARD;;IAUAE,UAAU;EACX,CAZM,EAYJ,CAACH,EAAD,CAZI,CAAT;EAcE,MAAMY,aAAa,GAAGX,KAAK,CAACY,MAAN,CAAaC,IAAI,IACrCA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCC,UAAU,CAACF,WAAX,EAAlC,CADoB,CAAtB;EAIA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,UACGJ,aAAa,CAACO,MAAd,GAAuB,CAAvB,GACCP,aAAa,CAACQ,GAAd,CAAkB,CAACN,IAAD,EAAOO,KAAP,kBAChB,QAAC,IAAD;MAAM,EAAE,EAAG,aAAYP,IAAI,CAACd,EAAG,EAA/B;MAAA,uBACE,QAAC,IAAD;QAAM,EAAE,EAAEc,IAAI,CAACd,EAAf;QAAmB,KAAK,EAAEc,IAAI,CAACC,KAA/B;QAAsC,WAAW,EAAED,IAAI,CAACQ;MAAxD;QAAA;QAAA;QAAA;MAAA;IADF,GAAuCR,IAAI,CAACd,EAA5C;MAAA;MAAA;MAAA;IAAA,QADF,CADD,gBAOC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EARJ;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CApCL;;GAAMD,S;;KAAAA,S;AAuCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}