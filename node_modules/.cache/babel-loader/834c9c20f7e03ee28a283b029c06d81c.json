{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\narut\\\\Documents\\\\Full Web Code Path\\\\Final Project\\\\client\\\\src\\\\pages\\\\ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\nimport { Link } from \"react-router-dom\";\nimport './ReadPosts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = _ref => {\n  _s();\n\n  let {\n    searchTerm\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  const [id, setId] = useState(null);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      let {\n        data: posts,\n        error\n      } = await supabase.from('Posts').select().order('created_at', {\n        ascending: true\n      });\n      if (error) console.log('Error: ', error);else setPosts(posts);\n    };\n\n    fetchPosts();\n  }, [id]);\n  const filteredPosts = posts.filter(post => post.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ReadPosts\",\n      children: filteredPosts.length > 0 ? filteredPosts.map((post, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/PostPage/${post.id}`,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          id: post.id,\n          likes: post.likes,\n          title: post.title,\n          createdtime: post.created_at\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Posts has been created yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ReadPosts, \"H97m85Zxib5V+gcev2LDx5vnHsM=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","Card","supabase","Link","ReadPosts","searchTerm","posts","setPosts","id","setId","fetchPosts","data","error","from","select","order","ascending","console","log","filteredPosts","filter","post","title","toLowerCase","includes","length","map","index","likes","created_at"],"sources":["C:/Users/narut/Documents/Full Web Code Path/Final Project/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '../components/Card';\nimport { supabase } from '../client'\nimport { Link } from \"react-router-dom\";\nimport './ReadPosts.css'\nconst ReadPosts = ({ searchTerm }) => {\n\n    const [posts, setPosts] = useState([]);\n    const [id, setId] = useState(null);\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n          let { data: posts, error } = await supabase\n            .from('Posts')\n            .select()\n            .order('created_at', { ascending: true });\n    \n          if (error) console.log('Error: ', error);\n          else setPosts(posts);\n        };\n    \n        fetchPosts();\n      }, [id]);\n    \n      const filteredPosts = posts.filter(post =>\n        post.title.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    \n      return (\n      <div className=\"Page\">\n        <div className=\"ReadPosts\">\n          {filteredPosts.length > 0 ? (\n            filteredPosts.map((post, index) => (\n              <Link to={`/PostPage/${post.id}`} key={post.id}>\n                <Card id={post.id}  likes={post.likes} title={post.title} createdtime={post.created_at} />\n              </Link>\n            ))\n          ) : (\n            <h2>No Posts has been created yet</h2>\n          )}\n        </div>\n        </div>\n      );\n    }\n\n\nexport default ReadPosts;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,iBAAP;;;AACA,MAAMC,SAAS,GAAG,QAAoB;EAAA;;EAAA,IAAnB;IAAEC;EAAF,CAAmB;EAElC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACS,EAAD,EAAKC,KAAL,IAAcV,QAAQ,CAAC,IAAD,CAA5B;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMU,UAAU,GAAG,YAAY;MAC7B,IAAI;QAAEC,IAAI,EAAEL,KAAR;QAAeM;MAAf,IAAyB,MAAMV,QAAQ,CACxCW,IADgC,CAC3B,OAD2B,EAEhCC,MAFgC,GAGhCC,KAHgC,CAG1B,YAH0B,EAGZ;QAAEC,SAAS,EAAE;MAAb,CAHY,CAAnC;MAKA,IAAIJ,KAAJ,EAAWK,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,KAAvB,EAAX,KACKL,QAAQ,CAACD,KAAD,CAAR;IACN,CARD;;IAUAI,UAAU;EACX,CAZM,EAYJ,CAACF,EAAD,CAZI,CAAT;EAcE,MAAMW,aAAa,GAAGb,KAAK,CAACc,MAAN,CAAaC,IAAI,IACrCA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCnB,UAAU,CAACkB,WAAX,EAAlC,CADoB,CAAtB;EAIA,oBACA;IAAK,SAAS,EAAC,MAAf;IAAA,uBACE;MAAK,SAAS,EAAC,WAAf;MAAA,UACGJ,aAAa,CAACM,MAAd,GAAuB,CAAvB,GACCN,aAAa,CAACO,GAAd,CAAkB,CAACL,IAAD,EAAOM,KAAP,kBAChB,QAAC,IAAD;QAAM,EAAE,EAAG,aAAYN,IAAI,CAACb,EAAG,EAA/B;QAAA,uBACE,QAAC,IAAD;UAAM,EAAE,EAAEa,IAAI,CAACb,EAAf;UAAoB,KAAK,EAAEa,IAAI,CAACO,KAAhC;UAAuC,KAAK,EAAEP,IAAI,CAACC,KAAnD;UAA0D,WAAW,EAAED,IAAI,CAACQ;QAA5E;UAAA;UAAA;UAAA;QAAA;MADF,GAAuCR,IAAI,CAACb,EAA5C;QAAA;QAAA;QAAA;MAAA,QADF,CADD,gBAOC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IARJ;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADA;AAeD,CAtCL;;GAAMJ,S;;KAAAA,S;AAyCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}